// Variables
$spinnerSize: 16px;
$spinnerThickness: 1px;
$desktop-breakpoint: 1024px;

// Colours
$grey: #e6e6e6;
$greyLight: #f0f0f0;
$greyDark: #d6d6d6;
$greyDarkest: #b4b4b4;
$blue: #2684ff;
$red: #de350b;
$redLight: #ffbdad;

// Radius
$radius : 2px;

// Min Desktop
@mixin minDesktop {
	@media only screen and (min-width: #{$desktop-breakpoint + 1}) {
		@content;
	}
}

// Custom scroll bar
@mixin scrollBarStyle {

	@include minDesktop {

		&::-webkit-scrollbar {
			width: 10px;
			background: $greyLight;
			border-radius: $radius;
			cursor: pointer;
		}

		&::-webkit-scrollbar-thumb {
			background-color: $greyDark;
			border-radius: $radius;
			
			&:hover {
				background-color: $greyDarkest;
			}
		}
	}
}

// Loading spinner
@mixin loadingSpinner {
	border-radius: 50%;
	width: $spinnerSize;
	height: $spinnerSize;
	position: relative;
	border: $spinnerThickness solid transparent;
	border-left: $spinnerThickness solid $blue;
	transform: translateZ(0);
	animation: loadingSpin 1.1s infinite linear;
	overflow: hidden;

	&::after {
		border-radius: 50%;
		width: $spinnerSize;
		height: $spinnerSize;
	}
}

// Clear all button
@mixin clearAllButton {
	padding: 4px;
    cursor: pointer;
    fill: $redLight;
    height: calc(1em + 10px);

	&:hover,
	&:focus,
	&:focus-visible {
		outline: none;
		fill: $red;
	}
}

// Delete button
@mixin deleteButton {
	position: relative;
	display: block;
	width: 16px;
	height: 16px;
	font-size: 80%;
	text-align: center;
	color: $greyDark;
	cursor: pointer;
	border-radius: $radius;

	&:hover {
		background-color: $red;

		&:before,
		&:after {
			background-color: #fff;
		}
	}

	&:before,
	&:after {
		position: absolute;
		left: 7px;
		top: 3px;
		content: ' ';
		height: 10px;
		width: 2px;
		border-radius: $radius;
		background-color: $greyDarkest;
	}

	&:before { transform: rotate(45deg); }

	&:after { transform: rotate(-45deg); }
}

.Msa {
	width: 100%; // Should relative to parent to keep width responsive
	min-width: 150px; // Minimum space required by component
	height: min-content; // Prevents auto height expand
	font-family: inherit; // Use inherited font style
	font-size: inherit; // Use inherited font size

	// Make sure everything border-box for correct calculations
	* { box-sizing: border-box; }

	// Selections container
	&_Selection { 
		display: grid;
		gap: 8px;
	}

	// Loading Container
	&_Loading {
		display: none;
	}

	&_LoadingSpinner {
		@include loadingSpinner;
	}

	// Search input container
	&_FilterInput {
		position: relative; // Require to set child elements offset
		display: grid;
		align-items: center;
		height: 100%;
		min-width: 50px;
		min-height: 24px;
		grid-template-columns: 1fr;
		gap: 8px;
		border: 1px #d4d4d4 solid;
		background: #fff;
		padding: 4px;
		border-radius: $radius;

		&:focus-within {
			border: 1px solid $blue;
		}

		&--invalid {
			border: 1px solid $red;
		}

		input {
			border: 0;
			font-size: 100%;
			&:focus { outline: 0; }
		}
	}

	// Selected items list container (UL)
	&_SelectionList {
		display: block;
		list-style-type: none;
		margin: 6px 0 0 0;
		padding: 0;
		width: 100%;

		// List items
		&_Item {
			display: grid;
			align-items: center;
			align-content: center;
			padding: 4px;
			background-color: $greyLight;
			border-radius: $radius;
			white-space: nowrap;
			float: left;
			margin: 0 4px 4px 0;

			// Set max width to save space
			& > span {
				text-overflow: ellipsis;
				overflow: hidden;
			}

			&:hover,
			&:focus,
			&:focus-visible {
				outline: none;
				background-color: $greyDark;
			}

			// With delete button
			&--showDelete {
				grid-template-columns: min-content min-content;
				column-gap: 8px;

				&:hover,
				&:focus,
				&:focus-visible {
					.Msa_DeleteButton {
						background-color: $red;
				
						&:before,
						&:after {
							background-color: #fff;
						}
					}
				}
			}
		}

		&_More {
			display: grid;
			align-items: center;
			align-content: center;
			float: left;
		}

		&_ClearAllButtonContainer {
			display: grid;
			align-items: center;
			align-content: center;
			float: left;
			cursor: pointer;

			&:hover,
			&:focus,
			&:focus-visible {
				outline: none;
				
				.Msa_ClearAllButton {
					fill: $red;
				}
			}
		}

		&_DeleteButtonContainer {
			display: grid;
			cursor: pointer;
		}

		&::after {
			display: block;
			content: '';
			clear: both;
		}
	}

	&_DeleteButton {
		@include deleteButton;
	}

	&_ClearAllButton {
		@include clearAllButton;
	}

	&_MoreItem {
		padding: 4px;
		background-color: #fdfdfd;
		border-radius: $radius;
		white-space: nowrap;
		float: left;
		margin: 0 4px 4px 0;
	}

	&_FilterList {
		display: none;
		width: max-content;
		position: absolute;
		z-index: 2;
		background: #fff;
		box-shadow: 5px 5px 5px -2px rgba(0,0,0,0.25);

		// Suggestion list
		ul {
			list-style-type: none;
			margin: 0;
			padding: 0;
			max-height: 300px;
			overflow-x: auto;
			border: 1px #d4d4d4 solid;
			border-radius: $radius;

			@include scrollBarStyle;

			.Msa_FilterList_Item {
				padding: 4px 6px;
				cursor: pointer;

				&:hover,
				&:focus,
				&:focus-visible {
					background-color: #d4d4d4;
					border: 0;
					outline: none;
				}

				&--disabled {
					background-color: #f1f1f1;
					cursor: unset;
				}
			}
		}
	}

	&--loading {
		.Msa_FilterInput {
			grid-template-columns: 1fr min-content;
			column-gap: 8px;
		}
		.Msa_Loading {
			display: block;
		}
	}

	&--disabled {
		.Msa_FilterInput {
			background-color: #e4e4e4;
		}
	}

	// Text Wrap
	&--noWrap .Msa_SelectionList_Item { 
		white-space: nowrap;
	}

	// Open
	&--open {
		.Msa_FilterList { display: grid; }
	}

	// Alignment
	&--top {
		.Msa_FilterList { top: 0; }
	}

	&--bottom {
		.Msa_FilterList { bottom: 0; }
	}

	&--left {
		.Msa_FilterList { 
			left: -1px;
			text-align: left;
		}
	}

	&--right {
		.Msa_FilterList { 
			right: 0;
			text-align: right;
		}
	}
}

@-webkit-keyframes loadingSpin {
	0% {
		-webkit-transform: rotate(0deg);
		transform: rotate(0deg);
	}

	100% {
		-webkit-transform: rotate(360deg);
		transform: rotate(360deg);
	}
}

@keyframes loadingSpin {
	0% {
		-webkit-transform: rotate(0deg);
		transform: rotate(0deg);
	}

	100% {
		-webkit-transform: rotate(360deg);
		transform: rotate(360deg);
	}
}